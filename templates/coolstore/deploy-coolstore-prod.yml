kind: Template
apiVersion: v1
metadata:
  annotations:
    description: app template Coolstore Monolith using Git source build & SQL Server
    iconClass: icon-jboss
    tags: eap,sqlserver,javaee,java,database,jboss,xpaas
    version: 1.0.0
    openshift.io/display-name: Red Hat Demos - Coolstore Monnolith using source build
  name: coolstore-monolith-sqlserver
labels:
  template: coolstore-monolith-sqlserver
message: The resources (build config, deploy config, service, imagestreams, etc) for
  running the Coolstore Monolith SQL Server demo has been created in your project.
objects:
- kind: Route
  apiVersion: v1
  id: coolstore-http
  metadata:
    name: coolstore
    labels:
      app: coolstore
    annotations:
      description: Route for app's http service.
  spec:
    to:
      kind: Service
      name: coolstore-blue
      weight: 100
    alternateBackends:
    - kind: Service
      name: coolstore-green
      weight: 0
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: coolstore-blue
  metadata:
    name: coolstore-blue
    labels:
      app: coolstore
    annotations:
      description: The web server's http port.
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: coolstore-blue
    labels:
      app: coolstore
      color: blue
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
    triggers: []
    # - type: ImageChange
    #   imageChangeParams:
    #     automatic: false
    #     containerNames:
    #     - coolstore
    #     from:
    #       kind: ImageStreamTag
    #       namespace: ${IMAGE_NAMESPACE}
    #       name: coolstore:${APP_TAG}
    replicas: 1
    selector:
      deploymentConfig: coolstore-blue
    template:
      metadata:
        name: coolstore
        labels:
          deploymentConfig: coolstore-blue
          app: coolstore
      spec:
        terminationGracePeriodSeconds: 75
        containers:
        - name: coolstore
          image: ${EXTERNAL_REGISTRY}:${APP_TAG}
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - "/opt/eap/bin/jboss-cli.sh"
                - "-c"
                - ":shutdown(timeout=60)"
          livenessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "/opt/eap/bin/livenessProbe.sh"
          readinessProbe:
            httpGet:
              path: "/health.jsp"
              port: 8080
              scheme: HTTP
            timeoutSeconds: 120
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 5
            initialDelaySeconds: 10
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: ping
            containerPort: 8888
            protocol: TCP
          env:
          - name: DATASOURCES
            value: "COOLSTORE"
          - name: COOLSTORE_USERNAME
            value: "sa"
          - name: COOLSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: coolstore-sqlserver
          - name: COOLSTORE_JNDI
            value: "java:jboss/datasources/CoolstoreDS"
          - name: COOLSTORE_DATABASE
            value: "${SQLSERVER_DATABASE_NAME}"
          - name: COOLSTORE_DRIVER
            value: "sqlserver"
          - name: COOLSTORE_SERVICE_HOST
            value: "${SQLSERVER_SERVICE_NAME}"
          - name: COOLSTORE_SERVICE_PORT
            value: "${SQLSERVER_PORT}"
          - name: COOLSTORE_NONXA
            value: "true"
          - name: COOLSTORE_URL
            value: "jdbc:sqlserver://${SQLSERVER_SERVICE_NAME}:${SQLSERVER_PORT};databaseName=${SQLSERVER_DATABASE_NAME};"
- kind: Service
  apiVersion: v1
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: coolstore-green
  metadata:
    name: coolstore-green
    labels:
      app: coolstore
      color: green
    annotations:
      description: The web server's http port.
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: coolstore-green
    labels:
      app: coolstore
      color: green
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
    triggers: []
    # - type: ImageChange
    #   imageChangeParams:
    #     automatic: false
    #     containerNames:
    #     - coolstore
    #     from:
    #       kind: ImageStreamTag
    #       namespace: ${IMAGE_NAMESPACE}
    #       name: coolstore:${APP_TAG}
    replicas: 1
    selector:
      deploymentConfig: coolstore-green
    template:
      metadata:
        name: coolstore
        labels:
          deploymentConfig: coolstore-green
          app: coolstore
      spec:
        terminationGracePeriodSeconds: 75
        containers:
        - name: coolstore
          image: ${EXTERNAL_REGISTRY}:${APP_TAG}
          imagePullPolicy: Always
          lifecycle:
            preStop:
              exec:
                command:
                - "/opt/eap/bin/jboss-cli.sh"
                - "-c"
                - ":shutdown(timeout=60)"
          livenessProbe:
            exec:
              command:
              - "/bin/bash"
              - "-c"
              - "/opt/eap/bin/livenessProbe.sh"
          readinessProbe:
            httpGet:
              path: "/health.jsp"
              port: 8080
              scheme: HTTP
            timeoutSeconds: 120
            periodSeconds: 20
            successThreshold: 1
            failureThreshold: 5
            initialDelaySeconds: 10
          ports:
          - name: jolokia
            containerPort: 8778
            protocol: TCP
          - name: http
            containerPort: 8080
            protocol: TCP
          - name: https
            containerPort: 8443
            protocol: TCP
          - name: ping
            containerPort: 8888
            protocol: TCP
          env:
          - name: DATASOURCES
            value: "COOLSTORE"
          - name: COOLSTORE_USERNAME
            value: "sa"
          - name: COOLSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: coolstore-sqlserver
          - name: COOLSTORE_JNDI
            value: "java:jboss/datasources/CoolstoreDS"
          - name: COOLSTORE_DATABASE
            value: "${SQLSERVER_DATABASE_NAME}"
          - name: COOLSTORE_DRIVER
            value: "sqlserver"
          - name: COOLSTORE_SERVICE_HOST
            value: "${SQLSERVER_SERVICE_NAME}"
          - name: COOLSTORE_SERVICE_PORT
            value: "${SQLSERVER_PORT}"
          - name: COOLSTORE_NONXA
            value: "true"
          - name: COOLSTORE_URL
            value: "jdbc:sqlserver://${SQLSERVER_SERVICE_NAME}:${SQLSERVER_PORT};databaseName=${SQLSERVER_DATABASE_NAME};"
parameters:
- displayName: ImageStream Namespace
  description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  value: openshift
  required: true
- displayName: SQL Server Service Name
  name: SQLSERVER_SERVICE_NAME
  value: sqlserver
  required: true
- displayName: SQL Server SA Password
  name: SQLSERVER_PASSWORD
  from: '[#-$]{1}[a-zA-Z]{10}[0-9]{2}'
  generate: expression
  required: true
- displayName: SQL Server Database Name
  name: SQLSERVER_DATABASE_NAME
  value: monolith
  required: true
- displayName: SQL Server Port
  name: SQLSERVER_PORT
  value: "1433"
  required: true
- displayName: Coolstore image tag to use 
  name: APP_TAG
  value: latest
  required: true
- displayName: Coolstore imageStream 
  name: IMAGE_NAMESPACE
  value: mono-ci-cd
  required: true
- displayName: Coolstore imageStream 
  name: EXTERNAL_REGISTRY
  value: quay.io/demoforum/coolstore-monolith
  required: true